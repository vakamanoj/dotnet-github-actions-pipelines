name: Build Dot Net Framework App

on: 
  push:
    branches: master
      

jobs:
  build:
    permissions: write-all
    runs-on: windows-latest
    name: CI Build dotnet app
    steps:
      
      - name: checking out code
        uses: actions/checkout@v2
      
      - name: dot net compile tool
        uses: microsoft/setup-msbuild@v1
      
      # Step 3: Restore NuGet packages
      - name: Restore NuGet Packages
        run: |
          cd dotnet-github-actions-pipeline 
          nuget restore SomeConsoleApplication.sln
      
      # Step 4: Build the solution
      - name: Build Solution
        run: |
          cd dotnet-github-actions-pipeline
          msbuild SomeConsoleApplication.sln /nologo /nr:false /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:PublishUrl="bin/Release/"
          
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=github-actions-projects-key
            -Dsonar.projectKey=vakamanoj_dotnet-github-actions-pipelines
            
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-build-artifacts
          path: dotnet-github-actions-pipeline/SomeConsoleApplication/bin/Release/


  # sonarscan:
  #   name: SonarCloud Scan
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: 17
  #         distribution: 'zulu' # Alternative distribution options are available.
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #     - name: Cache SonarQube Cloud packages
  #       uses: actions/cache@v4
  #       with:
  #         path: ~\sonar\cache
  #         key: ${{ runner.os }}-sonar
  #         restore-keys: ${{ runner.os }}-sonar
  #     - name: Cache SonarQube Cloud scanner
  #       id: cache-sonar-scanner
  #       uses: actions/cache@v4
  #       with:
  #         path: .\.sonar\scanner
  #         key: ${{ runner.os }}-sonar-scanner
  #         restore-keys: ${{ runner.os }}-sonar-scanner
  #     - name: SonarCloud Scan
  #       uses: sonarsource/sonarcloud-github-action@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       with:
  #         args: >
  #           -Dsonar.organization=github-actions-projects-key
  #           -Dsonar.projectKey=vakamanoj_dotnet-github-actions-pipelines          
      # - name: Install SonarQube Cloud scanner
      #   if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      #   shell: pwsh
      #   run: |
      #     New-Item -Path .\.sonar\scanner -ItemType Directory
      #     dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      # - name: Build and analyze
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   shell: pwsh
      #   run: |
      #     .\.sonar\scanner\dotnet-sonarscanner begin /k:"vakamanoj_dotnet-github-actions-pipelines" /o:"github-actions-projects-key" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
         
      #     .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"   
    
      
  
    
